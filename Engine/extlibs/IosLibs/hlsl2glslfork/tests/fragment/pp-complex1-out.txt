
#line 378
struct v2f_vertex_lit {
    vec2 uv;
    vec4 diff;
    vec4 spec;
};
#line 432
struct v2f_img {
    vec4 pos;
    vec2 uv;
};
#line 428
struct appdata_img {
    vec4 vertex;
    vec2 texcoord;
};
#line 704
struct SurfaceOutput {
    vec3 Albedo;
    vec3 Normal;
    vec3 Emission;
    float Specular;
    float Gloss;
    float Alpha;
};
#line 19
struct Input {
    vec2 uv_MainTex;
};
#line 29
struct v2f_surf {
    vec4 pos;
    vec2 pack0;
    vec3 normal;
    vec3 vlight;
};
#line 216
struct appdata_full {
    vec4 vertex;
    vec4 tangent;
    vec3 normal;
    vec4 texcoord;
    vec4 texcoord1;
    vec4 color;
};
uniform vec4 _Color;
uniform vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform vec4 _WorldSpaceLightPos0;
void surf( in Input IN, inout SurfaceOutput o );
vec4 LightingLambert( in SurfaceOutput s, in vec3 lightDir, in float atten );
vec4 xlat_main( in v2f_surf IN );
#line 23
void surf( in Input IN, inout SurfaceOutput o ) {
    vec4 c;
    c = (texture2D( _MainTex, IN.uv_MainTex) * _Color);
    o.Albedo = c.xyz ;
    o.Alpha = c.w ;
}
#line 749
vec4 LightingLambert( in SurfaceOutput s, in vec3 lightDir, in float atten ) {
    float diff;
    vec4 c;
    diff = max( 0.00000, dot( s.Normal, lightDir));
    #line 754
    c.xyz  = ((s.Albedo * _LightColor0.xyz ) * ((diff * atten) * 2.00000));
    c.w  = s.Alpha;
    return c;
}
#line 81
vec4 xlat_main( in v2f_surf IN ) {
    Input surfIN;
    SurfaceOutput o;
    float atten = 1.00000;
    vec4 c;
    surfIN.uv_MainTex = IN.pack0.xy ;
    #line 85
    o.Albedo = vec3( 0.00000);
    o.Emission = vec3( 0.00000);
    o.Specular = 0.00000;
    o.Alpha = 0.00000;
    #line 89
    o.Gloss = 0.00000;
    o.Normal = IN.normal;
    #line 93
    surf( surfIN, o);
    c = vec4( 0.00000);
    #line 97
    c = LightingLambert( o, _WorldSpaceLightPos0.xyz , atten);
    c.xyz  += (o.Albedo * IN.vlight);
    #line 122
    return c;
}
varying vec2 xlv_TEXCOORD0;
varying vec3 xlv_TEXCOORD1;
varying vec3 xlv_TEXCOORD2;
void main() {
    vec4 xl_retval;
    v2f_surf xlt_IN;
    xlt_IN.pos = vec4(0.0);
    xlt_IN.pack0 = vec2( xlv_TEXCOORD0);
    xlt_IN.normal = vec3( xlv_TEXCOORD1);
    xlt_IN.vlight = vec3( xlv_TEXCOORD2);
    xl_retval = xlat_main( xlt_IN);
    gl_FragData[0] = vec4( xl_retval);
}
